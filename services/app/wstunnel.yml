apiVersion: apps/v1
kind: Deployment
metadata:
  name: wstunnel
  labels:
    app: wstunnel
spec:
  replicas: 1
  strategy:
    type: Recreate 
  selector:
    matchLabels:
      app: wstunnel
  template:
    metadata:
      labels:
        app: wstunnel
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
      - key: "kubernetes.io/hostname"
        operator: "Equal"
        value: "server"
      containers:
      - name: wstunnel
        image: ghcr.io/erebe/wstunnel:latest
        imagePullPolicy: Always
        args:
        - "./wstunnel"
        - "server"
        - "wss://[::]:8084"
        - "--dns-resolver=dns://[fd00:cafe::2]"
        env:
          - name: WSTUNNEL_RESTRICT_HTTP_UPGRADE_PATH_PREFIX
            value: "mielpopstropbon"
        ports:
        - containerPort: 8084
---
apiVersion: v1
kind: Service
metadata:
  name: wstunnel
spec:
  selector:
    app: wstunnel
  ports:
    - protocol: TCP
      port: 8084
      name: http
  clusterIP: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wstunnel-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/connection-proxy-header: "upgrade"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: "nginx"
  rules:
  - host: ws.erebe.eu
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: wstunnel
            port:
              name: http
